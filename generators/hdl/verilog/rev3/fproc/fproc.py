from URDFParser import URDFParser
from FPGACodegen import FPGACodegen
from util import VerilogWriter, FileManager
from rbd_config import dim_list, urdf_file, num_PEs

#---------------------------------------------

parser = URDFParser()
robot = parser.parse(urdf_file)
fpga_codegen = FPGACodegen(robot)

#-------- urdf attrs needed for codegen-ing this file ----------------

num_links = robot.get_num_links_effective()

#-------- File management -------------------

fm = FileManager("fproc.v")
output_file_path = fm.get_output_file_path()
fproc_file = open(output_file_path, "w")

vw = VerilogWriter(fproc_file, dim_list, num_links)

#--------- Setting commonly used bitwidths -----

bitwidth_num_links = vw.get_bitwidth(num_links)
bitwidth_num_links_str = str(bitwidth_num_links)

#---------------------------------------------

#fproc = fpga_codegen.get_fproc(vw, num_PEs)
#print(fproc.gen_dfidq_prev_mat_out_ports_by_PE())

#---------------------------------------------

# Make 6D Vector String
def makeD6VecString(prefix,suffix,dim_list):
   vec_str = ""
   last_element_bool = False
   for dim,d6 in enumerate(dim_list):
      vec_str = vec_str+prefix+d6+suffix
      last_element_bool = (dim == len(dim_list)-1)
      if (last_element_bool):
         vec_str = vec_str
      else:
         vec_str = vec_str+","
   return vec_str

# Write dq External Input Ports
def writeDQExternalInputPorts(PEid,output_file,dim_list,indent):
   PE_str = str(PEid)
   output_file.write(indent+"// dqPE"+PE_str+""+"\n")
   output_file.write(indent+"input  ["+str(vw.get_bitwidth_array_def(num_links))+":0]"+"\n")
   output_file.write(indent+indent+"link_in_dqPE"+PE_str+","+"\n")
   output_file.write(indent+"input  ["+str(vw.get_bitwidth_array_def(num_links))+":0]"+"\n")
   output_file.write(indent+indent+"derv_in_dqPE"+PE_str+","+"\n")
   output_file.write(indent+"input  signed[(WIDTH-1):0]"+"\n")
   output_file.write(indent+indent+"sinq_val_in_dqPE"+PE_str+",cosq_val_in_dqPE"+PE_str+","+"\n")
   output_file.write(indent+"input  signed[(WIDTH-1):0]"+"\n")
   output_file.write(indent+indent+"qd_val_in_dqPE"+PE_str+","+"\n")
   output_file.write(indent+"input  signed[(WIDTH-1):0]"+"\n")
   output_file.write(indent+indent+"v_curr_vec_in_AX_dqPE"+PE_str+",v_curr_vec_in_AY_dqPE"+PE_str+",v_curr_vec_in_AZ_dqPE"+PE_str+",v_curr_vec_in_LX_dqPE"+PE_str+",v_curr_vec_in_LY_dqPE"+PE_str+",v_curr_vec_in_LZ_dqPE"+PE_str+","+"\n")
   output_file.write(indent+"input  signed[(WIDTH-1):0]"+"\n")
   output_file.write(indent+indent+"a_curr_vec_in_AX_dqPE"+PE_str+",a_curr_vec_in_AY_dqPE"+PE_str+",a_curr_vec_in_AZ_dqPE"+PE_str+",a_curr_vec_in_LX_dqPE"+PE_str+",a_curr_vec_in_LY_dqPE"+PE_str+",a_curr_vec_in_LZ_dqPE"+PE_str+","+"\n")
   output_file.write(indent+"input  signed[(WIDTH-1):0]"+"\n")
   output_file.write(indent+indent+"v_prev_vec_in_AX_dqPE"+PE_str+",v_prev_vec_in_AY_dqPE"+PE_str+",v_prev_vec_in_AZ_dqPE"+PE_str+",v_prev_vec_in_LX_dqPE"+PE_str+",v_prev_vec_in_LY_dqPE"+PE_str+",v_prev_vec_in_LZ_dqPE"+PE_str+","+"\n")
   output_file.write(indent+"input  signed[(WIDTH-1):0]"+"\n")
   output_file.write(indent+indent+"a_prev_vec_in_AX_dqPE"+PE_str+",a_prev_vec_in_AY_dqPE"+PE_str+",a_prev_vec_in_AZ_dqPE"+PE_str+",a_prev_vec_in_LX_dqPE"+PE_str+",a_prev_vec_in_LY_dqPE"+PE_str+",a_prev_vec_in_LZ_dqPE"+PE_str+","+"\n")
   output_file.write(indent+"input  signed[(WIDTH-1):0]"+"\n")
   output_file.write(indent+indent+"dvdq_prev_vec_in_AX_dqPE"+PE_str+",dvdq_prev_vec_in_AY_dqPE"+PE_str+",dvdq_prev_vec_in_AZ_dqPE"+PE_str+",dvdq_prev_vec_in_LX_dqPE"+PE_str+",dvdq_prev_vec_in_LY_dqPE"+PE_str+",dvdq_prev_vec_in_LZ_dqPE"+PE_str+","+"\n")
   output_file.write(indent+"input  signed[(WIDTH-1):0]"+"\n")
   output_file.write(indent+indent+"dadq_prev_vec_in_AX_dqPE"+PE_str+",dadq_prev_vec_in_AY_dqPE"+PE_str+",dadq_prev_vec_in_AZ_dqPE"+PE_str+",dadq_prev_vec_in_LX_dqPE"+PE_str+",dadq_prev_vec_in_LY_dqPE"+PE_str+",dadq_prev_vec_in_LZ_dqPE"+PE_str+","+"\n")

# Write dqd External Input Ports
def writeDQDExternalInputPorts(PEid,output_file,dim_list,indent):
   PE_str = str(PEid)
   output_file.write(indent+"// dqdPE"+PE_str+""+"\n")
   output_file.write(indent+"input  ["+str(vw.get_bitwidth_array_def(num_links))+":0]"+"\n")
   output_file.write(indent+indent+"link_in_dqdPE"+PE_str+","+"\n")
   output_file.write(indent+"input  ["+str(vw.get_bitwidth_array_def(num_links))+":0]"+"\n")
   output_file.write(indent+indent+"derv_in_dqdPE"+PE_str+","+"\n")
   output_file.write(indent+"input  signed[(WIDTH-1):0]"+"\n")
   output_file.write(indent+indent+"sinq_val_in_dqdPE"+PE_str+",cosq_val_in_dqdPE"+PE_str+","+"\n")
   output_file.write(indent+"input  signed[(WIDTH-1):0]"+"\n")
   output_file.write(indent+indent+"qd_val_in_dqdPE"+PE_str+","+"\n")
   output_file.write(indent+"input  signed[(WIDTH-1):0]"+"\n")
   output_file.write(indent+indent+"v_curr_vec_in_AX_dqdPE"+PE_str+",v_curr_vec_in_AY_dqdPE"+PE_str+",v_curr_vec_in_AZ_dqdPE"+PE_str+",v_curr_vec_in_LX_dqdPE"+PE_str+",v_curr_vec_in_LY_dqdPE"+PE_str+",v_curr_vec_in_LZ_dqdPE"+PE_str+","+"\n")
   output_file.write(indent+"input  signed[(WIDTH-1):0]"+"\n")
   output_file.write(indent+indent+"a_curr_vec_in_AX_dqdPE"+PE_str+",a_curr_vec_in_AY_dqdPE"+PE_str+",a_curr_vec_in_AZ_dqdPE"+PE_str+",a_curr_vec_in_LX_dqdPE"+PE_str+",a_curr_vec_in_LY_dqdPE"+PE_str+",a_curr_vec_in_LZ_dqdPE"+PE_str+","+"\n")
   output_file.write(indent+"input  signed[(WIDTH-1):0]"+"\n")
   output_file.write(indent+indent+"dvdqd_prev_vec_in_AX_dqdPE"+PE_str+",dvdqd_prev_vec_in_AY_dqdPE"+PE_str+",dvdqd_prev_vec_in_AZ_dqdPE"+PE_str+",dvdqd_prev_vec_in_LX_dqdPE"+PE_str+",dvdqd_prev_vec_in_LY_dqdPE"+PE_str+",dvdqd_prev_vec_in_LZ_dqdPE"+PE_str+","+"\n")
   output_file.write(indent+"input  signed[(WIDTH-1):0]"+"\n")
   output_file.write(indent+indent+"dadqd_prev_vec_in_AX_dqdPE"+PE_str+",dadqd_prev_vec_in_AY_dqdPE"+PE_str+",dadqd_prev_vec_in_AZ_dqdPE"+PE_str+",dadqd_prev_vec_in_LX_dqdPE"+PE_str+",dadqd_prev_vec_in_LY_dqdPE"+PE_str+",dadqd_prev_vec_in_LZ_dqdPE"+PE_str+","+"\n")

#-------------------------------------------------------------------------------
fproc_file.write("`timescale 1ns / 1ps"+"\n")
fproc_file.write("\n")
fproc_file.write("// Forward Pass Row Unit with RNEA"+"\n")
fproc_file.write("\n")
fproc_file.write("//------------------------------------------------------------------------------"+"\n")
fproc_file.write("// fproc Module"+"\n")
fproc_file.write("//------------------------------------------------------------------------------"+"\n")
fproc_file.write("module fproc#(parameter WIDTH = 32,parameter DECIMAL_BITS = 16)("+"\n")
fproc_file.write("   // clock"+"\n")
fproc_file.write("   input  clk,"+"\n")
fproc_file.write("   // reset"+"\n")
fproc_file.write("   input reset,"+"\n")
fproc_file.write("   // get_data"+"\n")
fproc_file.write("   input get_data,"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // rnea external inputs"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // rnea"+"\n")
fproc_file.write("   input  ["+str(vw.get_bitwidth_array_def(num_links))+":0]"+"\n")
fproc_file.write("      link_in_rnea,"+"\n")
fproc_file.write("   input  signed[(WIDTH-1):0]"+"\n")
fproc_file.write("      sinq_val_in_rnea,cosq_val_in_rnea,"+"\n")
fproc_file.write("   input  signed[(WIDTH-1):0]"+"\n")
fproc_file.write("      qd_val_in_rnea,"+"\n")
fproc_file.write("   input  signed[(WIDTH-1):0]"+"\n")
fproc_file.write("      qdd_val_in_rnea,"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   input  signed[(WIDTH-1):0]"+"\n")
prefix = "v_prev_vec_in_"
suffix = "_rnea"
vec_str = makeD6VecString(prefix,suffix,dim_list)
fproc_file.write("      "+vec_str+","+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   input  signed[(WIDTH-1):0]"+"\n")
prefix = "a_prev_vec_in_"
suffix = "_rnea"
vec_str = makeD6VecString(prefix,suffix,dim_list)
fproc_file.write("      "+vec_str+","+"\n")
#-------------------------------------------------------------------------------
# TODO: example of using the file writing functions from the fproc port creation lib
#fproc.write_f_prev_vec_out_ports()
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // dq external inputs"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
indent = "   "
for PEid in range(1,num_PEs+1):
   writeDQExternalInputPorts(PEid,fproc_file,dim_list,indent)
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // dqd external inputs"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
indent = "   "
for PEid in range(1,num_PEs+1):
   writeDQDExternalInputPorts(PEid,fproc_file,dim_list,indent)
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // output_ready"+"\n")
fproc_file.write("   output output_ready,"+"\n")
fproc_file.write("   // dummy_output"+"\n")
fproc_file.write("   output dummy_output,"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // rnea external outputs"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // rnea"+"\n")
fproc_file.write("   output signed[(WIDTH-1):0]"+"\n")
#-------------------------------------------------------------------------------
suffix = "_rnea"
prefix = "v_curr_vec_out_"
vec_str = makeD6VecString(prefix,suffix,dim_list)
fproc_file.write("      "+vec_str+","+"\n")
fproc_file.write("   output  signed[(WIDTH-1):0]"+"\n")
prefix = "a_curr_vec_out_"
vec_str = makeD6VecString(prefix,suffix,dim_list)
fproc_file.write("      "+vec_str+","+"\n")
fproc_file.write("   output signed[(WIDTH-1):0]"+"\n")
prefix = "f_curr_vec_out_"
vec_str = makeD6VecString(prefix,suffix,dim_list)
fproc_file.write("      "+vec_str+","+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // dq external outputs"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
for PEid in range(1,num_PEs+1):
   PE_str = str(PEid)
   suffix = "_dqPE"+PE_str+""
   fproc_file.write("   // dqPE"+PE_str+""+"\n")
   fproc_file.write("   output signed[(WIDTH-1):0]"+"\n")
   prefix = "dvdq_curr_vec_out_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "dadq_curr_vec_out_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "dfdq_curr_vec_out_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // dqd external outputs"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
last_element_bool = False
for PEid in range(1,num_PEs+1):
   PE_str = str(PEid)
   suffix = "_dqdPE"+PE_str+""
   fproc_file.write("   // dqdPE"+PE_str+""+"\n")
   fproc_file.write("   output signed[(WIDTH-1):0]"+"\n")
   prefix = "dvdqd_curr_vec_out_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "dadqd_curr_vec_out_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "dfdqd_curr_vec_out_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   last_element_bool = (PEid == num_PEs)
   if (last_element_bool):
      fproc_file.write("      "+vec_str+"\n")
   else:
      fproc_file.write("      "+vec_str+","+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   );"+"\n")
fproc_file.write("\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // external wires and state"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // registers"+"\n")
fproc_file.write("   reg get_data_reg;"+"\n")
fproc_file.write("   reg output_ready_reg;"+"\n")
fproc_file.write("   reg dummy_output_reg;"+"\n")
fproc_file.write("   reg [2:0]"+"\n")
fproc_file.write("      state_reg;"+"\n")
fproc_file.write("   reg s1_bool_reg,s2_bool_reg,s3_bool_reg;"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // rnea external inputs"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // rnea"+"\n")
fproc_file.write("   reg ["+str(vw.get_bitwidth_array_def(num_links))+":0]"+"\n")
fproc_file.write("      link_reg_rnea;"+"\n")
fproc_file.write("   reg signed[(WIDTH-1):0]"+"\n")
fproc_file.write("      sinq_val_reg_rnea,cosq_val_reg_rnea,"+"\n")
fproc_file.write("      qd_val_reg_rnea,"+"\n")
fproc_file.write("      qdd_val_reg_rnea,"+"\n")
#-------------------------------------------------------------------------------
suffix = "_rnea"
prefix = "v_prev_vec_reg_"
vec_str = makeD6VecString(prefix,suffix,dim_list)
fproc_file.write("      "+vec_str+","+"\n")
suffix = "_rnea"
prefix = "a_prev_vec_reg_"
vec_str = makeD6VecString(prefix,suffix,dim_list)
fproc_file.write("      "+vec_str+";"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // dq external inputs"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
for PEid in range(1,num_PEs+1):
   PE_str = str(PEid)
   suffix = "_dqPE"+PE_str+""
   fproc_file.write("   // dqPE"+PE_str+""+"\n")
   fproc_file.write("   reg ["+str(vw.get_bitwidth_array_def(num_links))+":0]"+"\n")
   fproc_file.write("      link_reg_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   reg ["+str(vw.get_bitwidth_array_def(num_links))+":0]"+"\n")
   fproc_file.write("      derv_reg_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   reg signed[(WIDTH-1):0]"+"\n")
   fproc_file.write("      sinq_val_reg_dqPE"+PE_str+",cosq_val_reg_dqPE"+PE_str+","+"\n")
   fproc_file.write("      qd_val_reg_dqPE"+PE_str+","+"\n")
   prefix = "v_curr_vec_reg_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "a_curr_vec_reg_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "v_prev_vec_reg_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "a_prev_vec_reg_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "dvdq_prev_vec_reg_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "dadq_prev_vec_reg_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+";"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // dqd external inputs"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
for PEid in range(1,num_PEs+1):
   PE_str = str(PEid)
   suffix = "_dqdPE"+PE_str+""
   fproc_file.write("   // dqdPE"+PE_str+""+"\n")
   fproc_file.write("   reg ["+str(vw.get_bitwidth_array_def(num_links))+":0]"+"\n")
   fproc_file.write("      link_reg_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   reg ["+str(vw.get_bitwidth_array_def(num_links))+":0]"+"\n")
   fproc_file.write("      derv_reg_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   reg signed[(WIDTH-1):0]"+"\n")
   fproc_file.write("      sinq_val_reg_dqdPE"+PE_str+",cosq_val_reg_dqdPE"+PE_str+","+"\n")
   fproc_file.write("      qd_val_reg_dqdPE"+PE_str+","+"\n")
   prefix = "v_curr_vec_reg_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "a_curr_vec_reg_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "dvdqd_prev_vec_reg_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "dadqd_prev_vec_reg_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+";"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // next"+"\n")
fproc_file.write("   wire get_data_next;"+"\n")
fproc_file.write("   wire output_ready_next;"+"\n")
fproc_file.write("   wire dummy_output_next;"+"\n")
fproc_file.write("   wire [2:0]"+"\n")
fproc_file.write("      state_next;"+"\n")
fproc_file.write("   wire s1_bool_next,s2_bool_next,s3_bool_next;"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // rnea external inputs"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // rnea"+"\n")
fproc_file.write("   wire ["+str(vw.get_bitwidth_array_def(num_links))+":0]"+"\n")
fproc_file.write("      link_next_rnea;"+"\n")
fproc_file.write("   wire signed[(WIDTH-1):0]"+"\n")
fproc_file.write("      sinq_val_next_rnea,cosq_val_next_rnea,"+"\n")
fproc_file.write("      qd_val_next_rnea,"+"\n")
fproc_file.write("      qdd_val_next_rnea,"+"\n")
#-------------------------------------------------------------------------------
suffix = "_rnea"
prefix = "v_prev_vec_next_"
vec_str = makeD6VecString(prefix,suffix,dim_list)
fproc_file.write("      "+vec_str+","+"\n")
suffix = "_rnea"
prefix = "a_prev_vec_next_"
vec_str = makeD6VecString(prefix,suffix,dim_list)
fproc_file.write("      "+vec_str+";"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // dq external inputs"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
for PEid in range(1,num_PEs+1):
   PE_str = str(PEid)
   suffix = "_dqPE"+PE_str+""
   fproc_file.write("   // dqPE"+PE_str+""+"\n")
   fproc_file.write("   wire ["+str(vw.get_bitwidth_array_def(num_links))+":0]"+"\n")
   fproc_file.write("      link_next_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   wire ["+str(vw.get_bitwidth_array_def(num_links))+":0]"+"\n")
   fproc_file.write("      derv_next_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   wire signed[(WIDTH-1):0]"+"\n")
   fproc_file.write("      sinq_val_next_dqPE"+PE_str+",cosq_val_next_dqPE"+PE_str+","+"\n")
   fproc_file.write("      qd_val_next_dqPE"+PE_str+","+"\n")
   prefix = "v_curr_vec_next_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "a_curr_vec_next_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "v_prev_vec_next_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "a_prev_vec_next_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "dvdq_prev_vec_next_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "dadq_prev_vec_next_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+";"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // dqd external inputs"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
for PEid in range(1,num_PEs+1):
   PE_str = str(PEid)
   suffix = "_dqdPE"+PE_str+""
   fproc_file.write("   // dqdPE"+PE_str+""+"\n")
   fproc_file.write("   wire ["+str(vw.get_bitwidth_array_def(num_links))+":0]"+"\n")
   fproc_file.write("      link_next_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   wire ["+str(vw.get_bitwidth_array_def(num_links))+":0]"+"\n")
   fproc_file.write("      derv_next_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   wire signed[(WIDTH-1):0]"+"\n")
   fproc_file.write("      sinq_val_next_dqdPE"+PE_str+",cosq_val_next_dqdPE"+PE_str+","+"\n")
   fproc_file.write("      qd_val_next_dqdPE"+PE_str+","+"\n")
   prefix = "v_curr_vec_next_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "a_curr_vec_next_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "dvdqd_prev_vec_next_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+","+"\n")
   prefix = "dadqd_prev_vec_next_"
   vec_str = makeD6VecString(prefix,suffix,dim_list)
   fproc_file.write("      "+vec_str+";"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // external assignments"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // inputs"+"\n")
fproc_file.write("   assign get_data_next = get_data;"+"\n")
fproc_file.write("   // output"+"\n")
fproc_file.write("   assign output_ready = output_ready_reg;"+"\n")
fproc_file.write("   assign output_ready_next = ((state_reg == 3'd0)&&(get_data == 1)) ? 0 :"+"\n")
fproc_file.write("                              ((state_reg == 3'd0)&&(get_data == 0)) ? 0 :"+"\n")
fproc_file.write("                               (state_reg == 3'd1)                   ? 0 :"+"\n")
fproc_file.write("                               (state_reg == 3'd2)                   ? 1 :"+"\n")
fproc_file.write("                              ((state_reg == 3'd3)&&(get_data == 1)) ? 0 :"+"\n")
fproc_file.write("                              ((state_reg == 3'd3)&&(get_data == 0)) ? 0 : output_ready_reg;"+"\n")
fproc_file.write("   assign dummy_output = dummy_output_reg;"+"\n")
fproc_file.write("   assign dummy_output_next =  (state_reg == 3'd0)                   ? 0 :"+"\n")
fproc_file.write("                               (state_reg == 3'd1)                   ? 0 :"+"\n")
fproc_file.write("                              ((state_reg == 3'd2)&&(link_reg_rnea == {bitwidth}'d1)) ? 1 :".format(bitwidth=vw.get_bitwidth(num_links))+"\n")
fproc_file.write("                              ((state_reg == 3'd2)&&(link_reg_rnea != {bitwidth}'d1)) ? 0 :".format(bitwidth=vw.get_bitwidth(num_links))+"\n")
fproc_file.write("                               (state_reg == 3'd3)                   ? 0 : dummy_output_reg;"+"\n")
fproc_file.write("   // state"+"\n")
fproc_file.write("   assign state_next     = ((state_reg == 3'd0)&&(get_data == 1)) ? 3'd1 :"+"\n")
fproc_file.write("                           ((state_reg == 3'd0)&&(get_data == 0)) ? 3'd0 :"+"\n")
fproc_file.write("                            (state_reg == 3'd1)                   ? 3'd2 :"+"\n")
fproc_file.write("                            (state_reg == 3'd2)                   ? 3'd3 :"+"\n")
fproc_file.write("                           ((state_reg == 3'd3)&&(get_data == 1)) ? 3'd1 :"+"\n")
fproc_file.write("                           ((state_reg == 3'd3)&&(get_data == 0)) ? 3'd0 : state_reg;"+"\n")
fproc_file.write("   assign s1_bool_next   = ((state_reg == 3'd0)&&(get_data == 1)) ? 1 :"+"\n")
fproc_file.write("                           ((state_reg == 3'd0)&&(get_data == 0)) ? s1_bool_reg :"+"\n")
fproc_file.write("                            (state_reg == 3'd1)                   ? 0 :"+"\n")
fproc_file.write("                            (state_reg == 3'd2)                   ? 0 :"+"\n")
fproc_file.write("                           ((state_reg == 3'd3)&&(get_data == 1)) ? 1 :"+"\n")
fproc_file.write("                           ((state_reg == 3'd3)&&(get_data == 0)) ? 0 : s1_bool_reg;"+"\n")
fproc_file.write("   assign s2_bool_next   = ((state_reg == 3'd0)&&(get_data == 1)) ? 0 :"+"\n")
fproc_file.write("                           ((state_reg == 3'd0)&&(get_data == 0)) ? 0 :"+"\n")
fproc_file.write("                            (state_reg == 3'd1)                   ? 1 :"+"\n")
fproc_file.write("                            (state_reg == 3'd2)                   ? 0 :"+"\n")
fproc_file.write("                           ((state_reg == 3'd3)&&(get_data == 1)) ? 0 :"+"\n")
fproc_file.write("                           ((state_reg == 3'd3)&&(get_data == 0)) ? 0 : s2_bool_reg;"+"\n")
fproc_file.write("   assign s3_bool_next   = ((state_reg == 3'd0)&&(get_data == 1)) ? 0 :"+"\n")
fproc_file.write("                           ((state_reg == 3'd0)&&(get_data == 0)) ? 0 :"+"\n")
fproc_file.write("                            (state_reg == 3'd1)                   ? 0 :"+"\n")
fproc_file.write("                            (state_reg == 3'd2)                   ? 1 :"+"\n")
fproc_file.write("                           ((state_reg == 3'd3)&&(get_data == 1)) ? 0 :"+"\n")
fproc_file.write("                           ((state_reg == 3'd3)&&(get_data == 0)) ? 0 : s3_bool_reg;"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // rnea external inputs"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // rnea"+"\n")
fproc_file.write("   assign link_next_rnea = ((state_reg == 3'd0)&&(get_data == 1)) ? link_in_rnea :"+"\n")
fproc_file.write("                           ((state_reg == 3'd3)&&(get_data == 1)) ? link_in_rnea : link_reg_rnea;"+"\n")
fproc_file.write("   assign sinq_val_next_rnea = ((state_reg == 3'd0)&&(get_data == 1)) ? sinq_val_in_rnea :"+"\n")
fproc_file.write("                               ((state_reg == 3'd3)&&(get_data == 1)) ? sinq_val_in_rnea : sinq_val_reg_rnea;"+"\n")
fproc_file.write("   assign cosq_val_next_rnea = ((state_reg == 3'd0)&&(get_data == 1)) ? cosq_val_in_rnea :"+"\n")
fproc_file.write("                               ((state_reg == 3'd3)&&(get_data == 1)) ? cosq_val_in_rnea : cosq_val_reg_rnea;"+"\n")
fproc_file.write("   assign qd_val_next_rnea   = ((state_reg == 3'd0)&&(get_data == 1)) ? qd_val_in_rnea :"+"\n")
fproc_file.write("                               ((state_reg == 3'd3)&&(get_data == 1)) ? qd_val_in_rnea : qd_val_reg_rnea;"+"\n")
fproc_file.write("   assign qdd_val_next_rnea  = ((state_reg == 3'd0)&&(get_data == 1)) ? qdd_val_in_rnea :"+"\n")
fproc_file.write("                               ((state_reg == 3'd3)&&(get_data == 1)) ? qdd_val_in_rnea : qdd_val_reg_rnea;"+"\n")
fproc_file.write("   // v prev"+"\n")
fproc_file.write("   assign v_prev_vec_next_AX_rnea = ((state_reg == 3'd0)&&(get_data == 1)) ? v_prev_vec_in_AX_rnea :"+"\n")
fproc_file.write("                                    ((state_reg == 3'd3)&&(get_data == 1)) ? v_prev_vec_in_AX_rnea : v_prev_vec_reg_AX_rnea;"+"\n")
fproc_file.write("   assign v_prev_vec_next_AY_rnea = ((state_reg == 3'd0)&&(get_data == 1)) ? v_prev_vec_in_AY_rnea :"+"\n")
fproc_file.write("                                    ((state_reg == 3'd3)&&(get_data == 1)) ? v_prev_vec_in_AY_rnea : v_prev_vec_reg_AY_rnea;"+"\n")
fproc_file.write("   assign v_prev_vec_next_AZ_rnea = ((state_reg == 3'd0)&&(get_data == 1)) ? v_prev_vec_in_AZ_rnea :"+"\n")
fproc_file.write("                                    ((state_reg == 3'd3)&&(get_data == 1)) ? v_prev_vec_in_AZ_rnea : v_prev_vec_reg_AZ_rnea;"+"\n")
fproc_file.write("   assign v_prev_vec_next_LX_rnea = ((state_reg == 3'd0)&&(get_data == 1)) ? v_prev_vec_in_LX_rnea :"+"\n")
fproc_file.write("                                    ((state_reg == 3'd3)&&(get_data == 1)) ? v_prev_vec_in_LX_rnea : v_prev_vec_reg_LX_rnea;"+"\n")
fproc_file.write("   assign v_prev_vec_next_LY_rnea = ((state_reg == 3'd0)&&(get_data == 1)) ? v_prev_vec_in_LY_rnea :"+"\n")
fproc_file.write("                                    ((state_reg == 3'd3)&&(get_data == 1)) ? v_prev_vec_in_LY_rnea : v_prev_vec_reg_LY_rnea;"+"\n")
fproc_file.write("   assign v_prev_vec_next_LZ_rnea = ((state_reg == 3'd0)&&(get_data == 1)) ? v_prev_vec_in_LZ_rnea :"+"\n")
fproc_file.write("                                    ((state_reg == 3'd3)&&(get_data == 1)) ? v_prev_vec_in_LZ_rnea : v_prev_vec_reg_LZ_rnea;"+"\n")
fproc_file.write("   // a prev"+"\n")
fproc_file.write("   assign a_prev_vec_next_AX_rnea = ((state_reg == 3'd0)&&(get_data == 1)) ? a_prev_vec_in_AX_rnea :"+"\n")
fproc_file.write("                                    ((state_reg == 3'd3)&&(get_data == 1)) ? a_prev_vec_in_AX_rnea : a_prev_vec_reg_AX_rnea;"+"\n")
fproc_file.write("   assign a_prev_vec_next_AY_rnea = ((state_reg == 3'd0)&&(get_data == 1)) ? a_prev_vec_in_AY_rnea :"+"\n")
fproc_file.write("                                    ((state_reg == 3'd3)&&(get_data == 1)) ? a_prev_vec_in_AY_rnea : a_prev_vec_reg_AY_rnea;"+"\n")
fproc_file.write("   assign a_prev_vec_next_AZ_rnea = ((state_reg == 3'd0)&&(get_data == 1)) ? a_prev_vec_in_AZ_rnea :"+"\n")
fproc_file.write("                                    ((state_reg == 3'd3)&&(get_data == 1)) ? a_prev_vec_in_AZ_rnea : a_prev_vec_reg_AZ_rnea;"+"\n")
fproc_file.write("   assign a_prev_vec_next_LX_rnea = ((state_reg == 3'd0)&&(get_data == 1)) ? a_prev_vec_in_LX_rnea :"+"\n")
fproc_file.write("                                    ((state_reg == 3'd3)&&(get_data == 1)) ? a_prev_vec_in_LX_rnea : a_prev_vec_reg_LX_rnea;"+"\n")
fproc_file.write("   assign a_prev_vec_next_LY_rnea = ((state_reg == 3'd0)&&(get_data == 1)) ? a_prev_vec_in_LY_rnea :"+"\n")
fproc_file.write("                                    ((state_reg == 3'd3)&&(get_data == 1)) ? a_prev_vec_in_LY_rnea : a_prev_vec_reg_LY_rnea;"+"\n")
fproc_file.write("   assign a_prev_vec_next_LZ_rnea = ((state_reg == 3'd0)&&(get_data == 1)) ? a_prev_vec_in_LZ_rnea :"+"\n")
fproc_file.write("                                    ((state_reg == 3'd3)&&(get_data == 1)) ? a_prev_vec_in_LZ_rnea : a_prev_vec_reg_LZ_rnea;"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // dq external inputs"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
for PEid in range(1,num_PEs+1):
   PE_str = str(PEid)
   suffix = "_dqPE"+PE_str+""
   fproc_file.write("   // dqPE"+PE_str+""+"\n")
   fproc_file.write("   assign link_next_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? link_in_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                            ((state_reg == 3'd3)&&(get_data == 1)) ? link_in_dqPE"+PE_str+" : link_reg_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign derv_next_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? derv_in_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                            ((state_reg == 3'd3)&&(get_data == 1)) ? derv_in_dqPE"+PE_str+" : derv_reg_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign sinq_val_next_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? sinq_val_in_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                ((state_reg == 3'd3)&&(get_data == 1)) ? sinq_val_in_dqPE"+PE_str+" : sinq_val_reg_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign cosq_val_next_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? cosq_val_in_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                ((state_reg == 3'd3)&&(get_data == 1)) ? cosq_val_in_dqPE"+PE_str+" : cosq_val_reg_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign qd_val_next_dqPE"+PE_str+"   = ((state_reg == 3'd0)&&(get_data == 1)) ? qd_val_in_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                ((state_reg == 3'd3)&&(get_data == 1)) ? qd_val_in_dqPE"+PE_str+" : qd_val_reg_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   // v curr"+"\n")
   fproc_file.write("   assign v_curr_vec_next_AX_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_curr_vec_in_AX_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_curr_vec_in_AX_dqPE"+PE_str+" : v_curr_vec_reg_AX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign v_curr_vec_next_AY_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_curr_vec_in_AY_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_curr_vec_in_AY_dqPE"+PE_str+" : v_curr_vec_reg_AY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign v_curr_vec_next_AZ_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_curr_vec_in_AZ_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_curr_vec_in_AZ_dqPE"+PE_str+" : v_curr_vec_reg_AZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign v_curr_vec_next_LX_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_curr_vec_in_LX_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_curr_vec_in_LX_dqPE"+PE_str+" : v_curr_vec_reg_LX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign v_curr_vec_next_LY_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_curr_vec_in_LY_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_curr_vec_in_LY_dqPE"+PE_str+" : v_curr_vec_reg_LY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign v_curr_vec_next_LZ_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_curr_vec_in_LZ_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_curr_vec_in_LZ_dqPE"+PE_str+" : v_curr_vec_reg_LZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   // a curr"+"\n")
   fproc_file.write("   assign a_curr_vec_next_AX_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_curr_vec_in_AX_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_curr_vec_in_AX_dqPE"+PE_str+" : a_curr_vec_reg_AX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign a_curr_vec_next_AY_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_curr_vec_in_AY_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_curr_vec_in_AY_dqPE"+PE_str+" : a_curr_vec_reg_AY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign a_curr_vec_next_AZ_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_curr_vec_in_AZ_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_curr_vec_in_AZ_dqPE"+PE_str+" : a_curr_vec_reg_AZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign a_curr_vec_next_LX_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_curr_vec_in_LX_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_curr_vec_in_LX_dqPE"+PE_str+" : a_curr_vec_reg_LX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign a_curr_vec_next_LY_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_curr_vec_in_LY_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_curr_vec_in_LY_dqPE"+PE_str+" : a_curr_vec_reg_LY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign a_curr_vec_next_LZ_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_curr_vec_in_LZ_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_curr_vec_in_LZ_dqPE"+PE_str+" : a_curr_vec_reg_LZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   // v prev"+"\n")
   fproc_file.write("   assign v_prev_vec_next_AX_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_prev_vec_in_AX_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_prev_vec_in_AX_dqPE"+PE_str+" : v_prev_vec_reg_AX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign v_prev_vec_next_AY_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_prev_vec_in_AY_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_prev_vec_in_AY_dqPE"+PE_str+" : v_prev_vec_reg_AY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign v_prev_vec_next_AZ_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_prev_vec_in_AZ_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_prev_vec_in_AZ_dqPE"+PE_str+" : v_prev_vec_reg_AZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign v_prev_vec_next_LX_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_prev_vec_in_LX_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_prev_vec_in_LX_dqPE"+PE_str+" : v_prev_vec_reg_LX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign v_prev_vec_next_LY_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_prev_vec_in_LY_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_prev_vec_in_LY_dqPE"+PE_str+" : v_prev_vec_reg_LY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign v_prev_vec_next_LZ_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_prev_vec_in_LZ_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_prev_vec_in_LZ_dqPE"+PE_str+" : v_prev_vec_reg_LZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   // a prev"+"\n")
   fproc_file.write("   assign a_prev_vec_next_AX_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_prev_vec_in_AX_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_prev_vec_in_AX_dqPE"+PE_str+" : a_prev_vec_reg_AX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign a_prev_vec_next_AY_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_prev_vec_in_AY_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_prev_vec_in_AY_dqPE"+PE_str+" : a_prev_vec_reg_AY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign a_prev_vec_next_AZ_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_prev_vec_in_AZ_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_prev_vec_in_AZ_dqPE"+PE_str+" : a_prev_vec_reg_AZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign a_prev_vec_next_LX_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_prev_vec_in_LX_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_prev_vec_in_LX_dqPE"+PE_str+" : a_prev_vec_reg_LX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign a_prev_vec_next_LY_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_prev_vec_in_LY_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_prev_vec_in_LY_dqPE"+PE_str+" : a_prev_vec_reg_LY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign a_prev_vec_next_LZ_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_prev_vec_in_LZ_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_prev_vec_in_LZ_dqPE"+PE_str+" : a_prev_vec_reg_LZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   // dv prev"+"\n")
   fproc_file.write("   assign dvdq_prev_vec_next_AX_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dvdq_prev_vec_in_AX_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dvdq_prev_vec_in_AX_dqPE"+PE_str+" : dvdq_prev_vec_reg_AX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dvdq_prev_vec_next_AY_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dvdq_prev_vec_in_AY_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dvdq_prev_vec_in_AY_dqPE"+PE_str+" : dvdq_prev_vec_reg_AY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dvdq_prev_vec_next_AZ_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dvdq_prev_vec_in_AZ_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dvdq_prev_vec_in_AZ_dqPE"+PE_str+" : dvdq_prev_vec_reg_AZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dvdq_prev_vec_next_LX_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dvdq_prev_vec_in_LX_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dvdq_prev_vec_in_LX_dqPE"+PE_str+" : dvdq_prev_vec_reg_LX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dvdq_prev_vec_next_LY_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dvdq_prev_vec_in_LY_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dvdq_prev_vec_in_LY_dqPE"+PE_str+" : dvdq_prev_vec_reg_LY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dvdq_prev_vec_next_LZ_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dvdq_prev_vec_in_LZ_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dvdq_prev_vec_in_LZ_dqPE"+PE_str+" : dvdq_prev_vec_reg_LZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   // da prev"+"\n")
   fproc_file.write("   assign dadq_prev_vec_next_AX_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dadq_prev_vec_in_AX_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dadq_prev_vec_in_AX_dqPE"+PE_str+" : dadq_prev_vec_reg_AX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dadq_prev_vec_next_AY_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dadq_prev_vec_in_AY_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dadq_prev_vec_in_AY_dqPE"+PE_str+" : dadq_prev_vec_reg_AY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dadq_prev_vec_next_AZ_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dadq_prev_vec_in_AZ_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dadq_prev_vec_in_AZ_dqPE"+PE_str+" : dadq_prev_vec_reg_AZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dadq_prev_vec_next_LX_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dadq_prev_vec_in_LX_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dadq_prev_vec_in_LX_dqPE"+PE_str+" : dadq_prev_vec_reg_LX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dadq_prev_vec_next_LY_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dadq_prev_vec_in_LY_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dadq_prev_vec_in_LY_dqPE"+PE_str+" : dadq_prev_vec_reg_LY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dadq_prev_vec_next_LZ_dqPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dadq_prev_vec_in_LZ_dqPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dadq_prev_vec_in_LZ_dqPE"+PE_str+" : dadq_prev_vec_reg_LZ_dqPE"+PE_str+";"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // dqd external inputs"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
for PEid in range(1,num_PEs+1):
   PE_str = str(PEid)
   suffix = "_dqdPE"+PE_str+""
   fproc_file.write("   // dqdPE"+PE_str+""+"\n")
   fproc_file.write("   assign link_next_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? link_in_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                            ((state_reg == 3'd3)&&(get_data == 1)) ? link_in_dqdPE"+PE_str+" : link_reg_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign derv_next_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? derv_in_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                            ((state_reg == 3'd3)&&(get_data == 1)) ? derv_in_dqdPE"+PE_str+" : derv_reg_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign sinq_val_next_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? sinq_val_in_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                ((state_reg == 3'd3)&&(get_data == 1)) ? sinq_val_in_dqdPE"+PE_str+" : sinq_val_reg_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign cosq_val_next_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? cosq_val_in_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                ((state_reg == 3'd3)&&(get_data == 1)) ? cosq_val_in_dqdPE"+PE_str+" : cosq_val_reg_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign qd_val_next_dqdPE"+PE_str+"   = ((state_reg == 3'd0)&&(get_data == 1)) ? qd_val_in_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                ((state_reg == 3'd3)&&(get_data == 1)) ? qd_val_in_dqdPE"+PE_str+" : qd_val_reg_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   // v curr"+"\n")
   fproc_file.write("   assign v_curr_vec_next_AX_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_curr_vec_in_AX_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_curr_vec_in_AX_dqdPE"+PE_str+" : v_curr_vec_reg_AX_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign v_curr_vec_next_AY_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_curr_vec_in_AY_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_curr_vec_in_AY_dqdPE"+PE_str+" : v_curr_vec_reg_AY_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign v_curr_vec_next_AZ_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_curr_vec_in_AZ_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_curr_vec_in_AZ_dqdPE"+PE_str+" : v_curr_vec_reg_AZ_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign v_curr_vec_next_LX_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_curr_vec_in_LX_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_curr_vec_in_LX_dqdPE"+PE_str+" : v_curr_vec_reg_LX_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign v_curr_vec_next_LY_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_curr_vec_in_LY_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_curr_vec_in_LY_dqdPE"+PE_str+" : v_curr_vec_reg_LY_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign v_curr_vec_next_LZ_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? v_curr_vec_in_LZ_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? v_curr_vec_in_LZ_dqdPE"+PE_str+" : v_curr_vec_reg_LZ_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   // a curr"+"\n")
   fproc_file.write("   assign a_curr_vec_next_AX_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_curr_vec_in_AX_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_curr_vec_in_AX_dqdPE"+PE_str+" : a_curr_vec_reg_AX_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign a_curr_vec_next_AY_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_curr_vec_in_AY_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_curr_vec_in_AY_dqdPE"+PE_str+" : a_curr_vec_reg_AY_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign a_curr_vec_next_AZ_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_curr_vec_in_AZ_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_curr_vec_in_AZ_dqdPE"+PE_str+" : a_curr_vec_reg_AZ_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign a_curr_vec_next_LX_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_curr_vec_in_LX_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_curr_vec_in_LX_dqdPE"+PE_str+" : a_curr_vec_reg_LX_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign a_curr_vec_next_LY_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_curr_vec_in_LY_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_curr_vec_in_LY_dqdPE"+PE_str+" : a_curr_vec_reg_LY_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign a_curr_vec_next_LZ_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? a_curr_vec_in_LZ_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                     ((state_reg == 3'd3)&&(get_data == 1)) ? a_curr_vec_in_LZ_dqdPE"+PE_str+" : a_curr_vec_reg_LZ_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   // dv prev"+"\n")
   fproc_file.write("   assign dvdqd_prev_vec_next_AX_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dvdqd_prev_vec_in_AX_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dvdqd_prev_vec_in_AX_dqdPE"+PE_str+" : dvdqd_prev_vec_reg_AX_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dvdqd_prev_vec_next_AY_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dvdqd_prev_vec_in_AY_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dvdqd_prev_vec_in_AY_dqdPE"+PE_str+" : dvdqd_prev_vec_reg_AY_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dvdqd_prev_vec_next_AZ_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dvdqd_prev_vec_in_AZ_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dvdqd_prev_vec_in_AZ_dqdPE"+PE_str+" : dvdqd_prev_vec_reg_AZ_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dvdqd_prev_vec_next_LX_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dvdqd_prev_vec_in_LX_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dvdqd_prev_vec_in_LX_dqdPE"+PE_str+" : dvdqd_prev_vec_reg_LX_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dvdqd_prev_vec_next_LY_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dvdqd_prev_vec_in_LY_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dvdqd_prev_vec_in_LY_dqdPE"+PE_str+" : dvdqd_prev_vec_reg_LY_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dvdqd_prev_vec_next_LZ_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dvdqd_prev_vec_in_LZ_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dvdqd_prev_vec_in_LZ_dqdPE"+PE_str+" : dvdqd_prev_vec_reg_LZ_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   // da prev"+"\n")
   fproc_file.write("   assign dadqd_prev_vec_next_AX_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dadqd_prev_vec_in_AX_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dadqd_prev_vec_in_AX_dqdPE"+PE_str+" : dadqd_prev_vec_reg_AX_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dadqd_prev_vec_next_AY_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dadqd_prev_vec_in_AY_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dadqd_prev_vec_in_AY_dqdPE"+PE_str+" : dadqd_prev_vec_reg_AY_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dadqd_prev_vec_next_AZ_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dadqd_prev_vec_in_AZ_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dadqd_prev_vec_in_AZ_dqdPE"+PE_str+" : dadqd_prev_vec_reg_AZ_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dadqd_prev_vec_next_LX_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dadqd_prev_vec_in_LX_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dadqd_prev_vec_in_LX_dqdPE"+PE_str+" : dadqd_prev_vec_reg_LX_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dadqd_prev_vec_next_LY_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dadqd_prev_vec_in_LY_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dadqd_prev_vec_in_LY_dqdPE"+PE_str+" : dadqd_prev_vec_reg_LY_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign dadqd_prev_vec_next_LZ_dqdPE"+PE_str+" = ((state_reg == 3'd0)&&(get_data == 1)) ? dadqd_prev_vec_in_LZ_dqdPE"+PE_str+" :"+"\n")
   fproc_file.write("                                        ((state_reg == 3'd3)&&(get_data == 1)) ? dadqd_prev_vec_in_LZ_dqdPE"+PE_str+" : dadqd_prev_vec_reg_LZ_dqdPE"+PE_str+";"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // external registers"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   always @ (posedge clk or posedge reset)"+"\n")
fproc_file.write("   begin"+"\n")
fproc_file.write("      if (reset)"+"\n")
fproc_file.write("      begin"+"\n")
fproc_file.write("         // inputs"+"\n")
fproc_file.write("         get_data_reg <= 0;"+"\n")
fproc_file.write("         // output"+"\n")
fproc_file.write("         output_ready_reg <= 0;"+"\n")
fproc_file.write("         dummy_output_reg <= 0;"+"\n")
fproc_file.write("         // state"+"\n")
fproc_file.write("         state_reg   <= 3'd0;"+"\n")
fproc_file.write("         s1_bool_reg <= 0;"+"\n")
fproc_file.write("         s2_bool_reg <= 0;"+"\n")
fproc_file.write("         s3_bool_reg <= 0;"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("         //---------------------------------------------------------------------"+"\n")
fproc_file.write("         // rnea external inputs"+"\n")
fproc_file.write("         //---------------------------------------------------------------------"+"\n")
fproc_file.write("         // rnea"+"\n")
fproc_file.write("         link_reg_rnea <= 3'd0;"+"\n")
fproc_file.write("         sinq_val_reg_rnea <= 32'd0;"+"\n")
fproc_file.write("         cosq_val_reg_rnea <= 32'd0;"+"\n")
fproc_file.write("         qd_val_reg_rnea   <= 32'd0;"+"\n")
fproc_file.write("         qdd_val_reg_rnea  <= 32'd0;"+"\n")
fproc_file.write("         // v prev"+"\n")
fproc_file.write("         v_prev_vec_reg_AX_rnea <= 32'd0;"+"\n")
fproc_file.write("         v_prev_vec_reg_AY_rnea <= 32'd0;"+"\n")
fproc_file.write("         v_prev_vec_reg_AZ_rnea <= 32'd0;"+"\n")
fproc_file.write("         v_prev_vec_reg_LX_rnea <= 32'd0;"+"\n")
fproc_file.write("         v_prev_vec_reg_LY_rnea <= 32'd0;"+"\n")
fproc_file.write("         v_prev_vec_reg_LZ_rnea <= 32'd0;"+"\n")
fproc_file.write("         // a prev"+"\n")
fproc_file.write("         a_prev_vec_reg_AX_rnea <= 32'd0;"+"\n")
fproc_file.write("         a_prev_vec_reg_AY_rnea <= 32'd0;"+"\n")
fproc_file.write("         a_prev_vec_reg_AZ_rnea <= 32'd0;"+"\n")
fproc_file.write("         a_prev_vec_reg_LX_rnea <= 32'd0;"+"\n")
fproc_file.write("         a_prev_vec_reg_LY_rnea <= 32'd0;"+"\n")
fproc_file.write("         a_prev_vec_reg_LZ_rnea <= 32'd0;"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("         //---------------------------------------------------------------------"+"\n")
fproc_file.write("         // dq external inputs"+"\n")
fproc_file.write("         //---------------------------------------------------------------------"+"\n")
for PEid in range(1,num_PEs+1):
   PE_str = str(PEid)
   suffix = "_dqPE"+PE_str+""
   fproc_file.write("         // dqPE"+PE_str+""+"\n")
   fproc_file.write("         link_reg_dqPE"+PE_str+" <= 3'd0;"+"\n")
   fproc_file.write("         derv_reg_dqPE"+PE_str+" <= 3'd0;"+"\n")
   fproc_file.write("         sinq_val_reg_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         cosq_val_reg_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         qd_val_reg_dqPE"+PE_str+"   <= 32'd0;"+"\n")
   fproc_file.write("         // v curr"+"\n")
   fproc_file.write("         v_curr_vec_reg_AX_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         v_curr_vec_reg_AY_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         v_curr_vec_reg_AZ_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         v_curr_vec_reg_LX_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         v_curr_vec_reg_LY_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         v_curr_vec_reg_LZ_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         // a curr"+"\n")
   fproc_file.write("         a_curr_vec_reg_AX_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         a_curr_vec_reg_AY_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         a_curr_vec_reg_AZ_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         a_curr_vec_reg_LX_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         a_curr_vec_reg_LY_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         a_curr_vec_reg_LZ_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         // v prev"+"\n")
   fproc_file.write("         v_prev_vec_reg_AX_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         v_prev_vec_reg_AY_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         v_prev_vec_reg_AZ_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         v_prev_vec_reg_LX_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         v_prev_vec_reg_LY_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         v_prev_vec_reg_LZ_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         // a prev"+"\n")
   fproc_file.write("         a_prev_vec_reg_AX_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         a_prev_vec_reg_AY_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         a_prev_vec_reg_AZ_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         a_prev_vec_reg_LX_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         a_prev_vec_reg_LY_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         a_prev_vec_reg_LZ_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         // dv prev"+"\n")
   fproc_file.write("         dvdq_prev_vec_reg_AX_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dvdq_prev_vec_reg_AY_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dvdq_prev_vec_reg_AZ_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dvdq_prev_vec_reg_LX_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dvdq_prev_vec_reg_LY_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dvdq_prev_vec_reg_LZ_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         // da prev"+"\n")
   fproc_file.write("         dadq_prev_vec_reg_AX_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dadq_prev_vec_reg_AY_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dadq_prev_vec_reg_AZ_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dadq_prev_vec_reg_LX_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dadq_prev_vec_reg_LY_dqPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dadq_prev_vec_reg_LZ_dqPE"+PE_str+" <= 32'd0;"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("         //---------------------------------------------------------------------"+"\n")
fproc_file.write("         // dqd external inputs"+"\n")
fproc_file.write("         //---------------------------------------------------------------------"+"\n")
for PEid in range(1,num_PEs+1):
   PE_str = str(PEid)
   suffix = "_dqdPE"+PE_str+""
   fproc_file.write("         // dqdPE"+PE_str+""+"\n")
   fproc_file.write("         link_reg_dqdPE"+PE_str+" <= 3'd0;"+"\n")
   fproc_file.write("         derv_reg_dqdPE"+PE_str+" <= 3'd0;"+"\n")
   fproc_file.write("         sinq_val_reg_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         cosq_val_reg_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         qd_val_reg_dqdPE"+PE_str+"   <= 32'd0;"+"\n")
   fproc_file.write("         // v curr"+"\n")
   fproc_file.write("         v_curr_vec_reg_AX_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         v_curr_vec_reg_AY_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         v_curr_vec_reg_AZ_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         v_curr_vec_reg_LX_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         v_curr_vec_reg_LY_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         v_curr_vec_reg_LZ_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         // a curr"+"\n")
   fproc_file.write("         a_curr_vec_reg_AX_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         a_curr_vec_reg_AY_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         a_curr_vec_reg_AZ_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         a_curr_vec_reg_LX_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         a_curr_vec_reg_LY_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         a_curr_vec_reg_LZ_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         // dv prev"+"\n")
   fproc_file.write("         dvdqd_prev_vec_reg_AX_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dvdqd_prev_vec_reg_AY_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dvdqd_prev_vec_reg_AZ_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dvdqd_prev_vec_reg_LX_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dvdqd_prev_vec_reg_LY_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dvdqd_prev_vec_reg_LZ_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         // da prev"+"\n")
   fproc_file.write("         dadqd_prev_vec_reg_AX_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dadqd_prev_vec_reg_AY_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dadqd_prev_vec_reg_AZ_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dadqd_prev_vec_reg_LX_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dadqd_prev_vec_reg_LY_dqdPE"+PE_str+" <= 32'd0;"+"\n")
   fproc_file.write("         dadqd_prev_vec_reg_LZ_dqdPE"+PE_str+" <= 32'd0;"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("         //---------------------------------------------------------------------"+"\n")
fproc_file.write("      end"+"\n")
fproc_file.write("      else"+"\n")
fproc_file.write("      begin"+"\n")
fproc_file.write("         // inputs"+"\n")
fproc_file.write("         get_data_reg <= get_data_next;"+"\n")
fproc_file.write("         // output"+"\n")
fproc_file.write("         output_ready_reg <= output_ready_next;"+"\n")
fproc_file.write("         dummy_output_reg <= dummy_output_next;"+"\n")
fproc_file.write("         // state"+"\n")
fproc_file.write("         state_reg   <= state_next;"+"\n")
fproc_file.write("         s1_bool_reg <= s1_bool_next;"+"\n")
fproc_file.write("         s2_bool_reg <= s2_bool_next;"+"\n")
fproc_file.write("         s3_bool_reg <= s3_bool_next;"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("         //---------------------------------------------------------------------"+"\n")
fproc_file.write("         // rnea external inputs"+"\n")
fproc_file.write("         //---------------------------------------------------------------------"+"\n")
fproc_file.write("         // rnea"+"\n")
fproc_file.write("         link_reg_rnea <= link_next_rnea;"+"\n")
fproc_file.write("         sinq_val_reg_rnea <= sinq_val_next_rnea;"+"\n")
fproc_file.write("         cosq_val_reg_rnea <= cosq_val_next_rnea;"+"\n")
fproc_file.write("         qd_val_reg_rnea   <= qd_val_next_rnea;"+"\n")
fproc_file.write("         qdd_val_reg_rnea  <= qdd_val_next_rnea;"+"\n")
fproc_file.write("         // v prev"+"\n")
fproc_file.write("         v_prev_vec_reg_AX_rnea <= v_prev_vec_next_AX_rnea;"+"\n")
fproc_file.write("         v_prev_vec_reg_AY_rnea <= v_prev_vec_next_AY_rnea;"+"\n")
fproc_file.write("         v_prev_vec_reg_AZ_rnea <= v_prev_vec_next_AZ_rnea;"+"\n")
fproc_file.write("         v_prev_vec_reg_LX_rnea <= v_prev_vec_next_LX_rnea;"+"\n")
fproc_file.write("         v_prev_vec_reg_LY_rnea <= v_prev_vec_next_LY_rnea;"+"\n")
fproc_file.write("         v_prev_vec_reg_LZ_rnea <= v_prev_vec_next_LZ_rnea;"+"\n")
fproc_file.write("         // a prev"+"\n")
fproc_file.write("         a_prev_vec_reg_AX_rnea <= a_prev_vec_next_AX_rnea;"+"\n")
fproc_file.write("         a_prev_vec_reg_AY_rnea <= a_prev_vec_next_AY_rnea;"+"\n")
fproc_file.write("         a_prev_vec_reg_AZ_rnea <= a_prev_vec_next_AZ_rnea;"+"\n")
fproc_file.write("         a_prev_vec_reg_LX_rnea <= a_prev_vec_next_LX_rnea;"+"\n")
fproc_file.write("         a_prev_vec_reg_LY_rnea <= a_prev_vec_next_LY_rnea;"+"\n")
fproc_file.write("         a_prev_vec_reg_LZ_rnea <= a_prev_vec_next_LZ_rnea;"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("         //---------------------------------------------------------------------"+"\n")
fproc_file.write("         // dq external inputs"+"\n")
fproc_file.write("         //---------------------------------------------------------------------"+"\n")
for PEid in range(1,num_PEs+1):
   PE_str = str(PEid)
   suffix = "_dqPE"+PE_str+""
   fproc_file.write("         // dqPE"+PE_str+""+"\n")
   fproc_file.write("         link_reg_dqPE"+PE_str+" <= link_next_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         derv_reg_dqPE"+PE_str+" <= derv_next_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         sinq_val_reg_dqPE"+PE_str+" <= sinq_val_next_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         cosq_val_reg_dqPE"+PE_str+" <= cosq_val_next_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         qd_val_reg_dqPE"+PE_str+"   <= qd_val_next_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         // v curr"+"\n")
   fproc_file.write("         v_curr_vec_reg_AX_dqPE"+PE_str+" <= v_curr_vec_next_AX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         v_curr_vec_reg_AY_dqPE"+PE_str+" <= v_curr_vec_next_AY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         v_curr_vec_reg_AZ_dqPE"+PE_str+" <= v_curr_vec_next_AZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         v_curr_vec_reg_LX_dqPE"+PE_str+" <= v_curr_vec_next_LX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         v_curr_vec_reg_LY_dqPE"+PE_str+" <= v_curr_vec_next_LY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         v_curr_vec_reg_LZ_dqPE"+PE_str+" <= v_curr_vec_next_LZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         // a curr"+"\n")
   fproc_file.write("         a_curr_vec_reg_AX_dqPE"+PE_str+" <= a_curr_vec_next_AX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         a_curr_vec_reg_AY_dqPE"+PE_str+" <= a_curr_vec_next_AY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         a_curr_vec_reg_AZ_dqPE"+PE_str+" <= a_curr_vec_next_AZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         a_curr_vec_reg_LX_dqPE"+PE_str+" <= a_curr_vec_next_LX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         a_curr_vec_reg_LY_dqPE"+PE_str+" <= a_curr_vec_next_LY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         a_curr_vec_reg_LZ_dqPE"+PE_str+" <= a_curr_vec_next_LZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         // v prev"+"\n")
   fproc_file.write("         v_prev_vec_reg_AX_dqPE"+PE_str+" <= v_prev_vec_next_AX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         v_prev_vec_reg_AY_dqPE"+PE_str+" <= v_prev_vec_next_AY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         v_prev_vec_reg_AZ_dqPE"+PE_str+" <= v_prev_vec_next_AZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         v_prev_vec_reg_LX_dqPE"+PE_str+" <= v_prev_vec_next_LX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         v_prev_vec_reg_LY_dqPE"+PE_str+" <= v_prev_vec_next_LY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         v_prev_vec_reg_LZ_dqPE"+PE_str+" <= v_prev_vec_next_LZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         // a prev"+"\n")
   fproc_file.write("         a_prev_vec_reg_AX_dqPE"+PE_str+" <= a_prev_vec_next_AX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         a_prev_vec_reg_AY_dqPE"+PE_str+" <= a_prev_vec_next_AY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         a_prev_vec_reg_AZ_dqPE"+PE_str+" <= a_prev_vec_next_AZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         a_prev_vec_reg_LX_dqPE"+PE_str+" <= a_prev_vec_next_LX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         a_prev_vec_reg_LY_dqPE"+PE_str+" <= a_prev_vec_next_LY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         a_prev_vec_reg_LZ_dqPE"+PE_str+" <= a_prev_vec_next_LZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         // v prev"+"\n")
   fproc_file.write("         dvdq_prev_vec_reg_AX_dqPE"+PE_str+" <= dvdq_prev_vec_next_AX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         dvdq_prev_vec_reg_AY_dqPE"+PE_str+" <= dvdq_prev_vec_next_AY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         dvdq_prev_vec_reg_AZ_dqPE"+PE_str+" <= dvdq_prev_vec_next_AZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         dvdq_prev_vec_reg_LX_dqPE"+PE_str+" <= dvdq_prev_vec_next_LX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         dvdq_prev_vec_reg_LY_dqPE"+PE_str+" <= dvdq_prev_vec_next_LY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         dvdq_prev_vec_reg_LZ_dqPE"+PE_str+" <= dvdq_prev_vec_next_LZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         // a prev"+"\n")
   fproc_file.write("         dadq_prev_vec_reg_AX_dqPE"+PE_str+" <= dadq_prev_vec_next_AX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         dadq_prev_vec_reg_AY_dqPE"+PE_str+" <= dadq_prev_vec_next_AY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         dadq_prev_vec_reg_AZ_dqPE"+PE_str+" <= dadq_prev_vec_next_AZ_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         dadq_prev_vec_reg_LX_dqPE"+PE_str+" <= dadq_prev_vec_next_LX_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         dadq_prev_vec_reg_LY_dqPE"+PE_str+" <= dadq_prev_vec_next_LY_dqPE"+PE_str+";"+"\n")
   fproc_file.write("         dadq_prev_vec_reg_LZ_dqPE"+PE_str+" <= dadq_prev_vec_next_LZ_dqPE"+PE_str+";"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("         //---------------------------------------------------------------------"+"\n")
fproc_file.write("         // dqd external inputs"+"\n")
fproc_file.write("         //---------------------------------------------------------------------"+"\n")
for PEid in range(1,num_PEs+1):
   PE_str = str(PEid)
   suffix = "_dqdPE"+PE_str+""
   fproc_file.write("         // dqdPE"+PE_str+""+"\n")
   fproc_file.write("         link_reg_dqdPE"+PE_str+" <= link_next_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         derv_reg_dqdPE"+PE_str+" <= derv_next_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         sinq_val_reg_dqdPE"+PE_str+" <= sinq_val_next_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         cosq_val_reg_dqdPE"+PE_str+" <= cosq_val_next_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         qd_val_reg_dqdPE"+PE_str+"   <= qd_val_next_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         // v curr"+"\n")
   fproc_file.write("         v_curr_vec_reg_AX_dqdPE"+PE_str+" <= v_curr_vec_next_AX_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         v_curr_vec_reg_AY_dqdPE"+PE_str+" <= v_curr_vec_next_AY_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         v_curr_vec_reg_AZ_dqdPE"+PE_str+" <= v_curr_vec_next_AZ_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         v_curr_vec_reg_LX_dqdPE"+PE_str+" <= v_curr_vec_next_LX_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         v_curr_vec_reg_LY_dqdPE"+PE_str+" <= v_curr_vec_next_LY_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         v_curr_vec_reg_LZ_dqdPE"+PE_str+" <= v_curr_vec_next_LZ_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         // a curr"+"\n")
   fproc_file.write("         a_curr_vec_reg_AX_dqdPE"+PE_str+" <= a_curr_vec_next_AX_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         a_curr_vec_reg_AY_dqdPE"+PE_str+" <= a_curr_vec_next_AY_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         a_curr_vec_reg_AZ_dqdPE"+PE_str+" <= a_curr_vec_next_AZ_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         a_curr_vec_reg_LX_dqdPE"+PE_str+" <= a_curr_vec_next_LX_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         a_curr_vec_reg_LY_dqdPE"+PE_str+" <= a_curr_vec_next_LY_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         a_curr_vec_reg_LZ_dqdPE"+PE_str+" <= a_curr_vec_next_LZ_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         // v prev"+"\n")
   fproc_file.write("         dvdqd_prev_vec_reg_AX_dqdPE"+PE_str+" <= dvdqd_prev_vec_next_AX_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         dvdqd_prev_vec_reg_AY_dqdPE"+PE_str+" <= dvdqd_prev_vec_next_AY_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         dvdqd_prev_vec_reg_AZ_dqdPE"+PE_str+" <= dvdqd_prev_vec_next_AZ_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         dvdqd_prev_vec_reg_LX_dqdPE"+PE_str+" <= dvdqd_prev_vec_next_LX_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         dvdqd_prev_vec_reg_LY_dqdPE"+PE_str+" <= dvdqd_prev_vec_next_LY_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         dvdqd_prev_vec_reg_LZ_dqdPE"+PE_str+" <= dvdqd_prev_vec_next_LZ_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         // a prev"+"\n")
   fproc_file.write("         dadqd_prev_vec_reg_AX_dqdPE"+PE_str+" <= dadqd_prev_vec_next_AX_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         dadqd_prev_vec_reg_AY_dqdPE"+PE_str+" <= dadqd_prev_vec_next_AY_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         dadqd_prev_vec_reg_AZ_dqdPE"+PE_str+" <= dadqd_prev_vec_next_AZ_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         dadqd_prev_vec_reg_LX_dqdPE"+PE_str+" <= dadqd_prev_vec_next_LX_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         dadqd_prev_vec_reg_LY_dqdPE"+PE_str+" <= dadqd_prev_vec_next_LY_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("         dadqd_prev_vec_reg_LZ_dqdPE"+PE_str+" <= dadqd_prev_vec_next_LZ_dqdPE"+PE_str+";"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("         //---------------------------------------------------------------------"+"\n")
fproc_file.write("      end"+"\n")
fproc_file.write("   end"+"\n")
fproc_file.write("\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // ID"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   rneafpx#(.WIDTH(WIDTH),.DECIMAL_BITS(DECIMAL_BITS))"+"\n")
fproc_file.write("      rneafpi("+"\n")
fproc_file.write("      // clock"+"\n")
fproc_file.write("      .clk(clk),"+"\n")
fproc_file.write("      // stage booleans"+"\n")
fproc_file.write("      .s1_bool_in(s1_bool_reg),.s2_bool_in(s2_bool_reg),.s3_bool_in(s3_bool_reg),"+"\n")
fproc_file.write("      // link_in"+"\n")
fproc_file.write("      .link_in(link_reg_rnea),"+"\n")
fproc_file.write("      // sin(q) and cos(q)"+"\n")
fproc_file.write("      .sinq_curr_in(sinq_val_reg_rnea),.cosq_curr_in(cosq_val_reg_rnea),"+"\n")
fproc_file.write("      // qd_curr_in"+"\n")
fproc_file.write("      .qd_curr_in(qd_val_reg_rnea),"+"\n")
fproc_file.write("      // qdd_curr_in"+"\n")
fproc_file.write("      .qdd_curr_in(qdd_val_reg_rnea),"+"\n")
fproc_file.write("      // v_prev_vec_in, 6 values"+"\n")
fproc_file.write("      .v_prev_vec_in_AX(v_prev_vec_reg_AX_rnea),.v_prev_vec_in_AY(v_prev_vec_reg_AY_rnea),.v_prev_vec_in_AZ(v_prev_vec_reg_AZ_rnea),.v_prev_vec_in_LX(v_prev_vec_reg_LX_rnea),.v_prev_vec_in_LY(v_prev_vec_reg_LY_rnea),.v_prev_vec_in_LZ(v_prev_vec_reg_LZ_rnea),"+"\n")
fproc_file.write("      // a_prev_vec_in, 6 values"+"\n")
fproc_file.write("      .a_prev_vec_in_AX(a_prev_vec_reg_AX_rnea),.a_prev_vec_in_AY(a_prev_vec_reg_AY_rnea),.a_prev_vec_in_AZ(a_prev_vec_reg_AZ_rnea),.a_prev_vec_in_LX(a_prev_vec_reg_LX_rnea),.a_prev_vec_in_LY(a_prev_vec_reg_LY_rnea),.a_prev_vec_in_LZ(a_prev_vec_reg_LZ_rnea),"+"\n")
fproc_file.write("      // v_curr_vec_out, 6 values"+"\n")
fproc_file.write("      .v_curr_vec_out_AX(v_curr_vec_out_AX_rnea),.v_curr_vec_out_AY(v_curr_vec_out_AY_rnea),.v_curr_vec_out_AZ(v_curr_vec_out_AZ_rnea),.v_curr_vec_out_LX(v_curr_vec_out_LX_rnea),.v_curr_vec_out_LY(v_curr_vec_out_LY_rnea),.v_curr_vec_out_LZ(v_curr_vec_out_LZ_rnea),"+"\n")
fproc_file.write("      // a_curr_vec_out, 6 values"+"\n")
fproc_file.write("      .a_curr_vec_out_AX(a_curr_vec_out_AX_rnea),.a_curr_vec_out_AY(a_curr_vec_out_AY_rnea),.a_curr_vec_out_AZ(a_curr_vec_out_AZ_rnea),.a_curr_vec_out_LX(a_curr_vec_out_LX_rnea),.a_curr_vec_out_LY(a_curr_vec_out_LY_rnea),.a_curr_vec_out_LZ(a_curr_vec_out_LZ_rnea),"+"\n")
fproc_file.write("      // f_curr_vec_out, 6 values"+"\n")
fproc_file.write("      .f_curr_vec_out_AX(f_curr_vec_out_AX_rnea),.f_curr_vec_out_AY(f_curr_vec_out_AY_rnea),.f_curr_vec_out_AZ(f_curr_vec_out_AZ_rnea),.f_curr_vec_out_LX(f_curr_vec_out_LX_rnea),.f_curr_vec_out_LY(f_curr_vec_out_LY_rnea),.f_curr_vec_out_LZ(f_curr_vec_out_LZ_rnea)"+"\n")
fproc_file.write("      );"+"\n")
fproc_file.write("\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // dq external inputs"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
for PEid in range(1,num_PEs+1):
   PE_str = str(PEid)
   suffix = "_dqPE"+PE_str+""
   fproc_file.write("   // dqPE"+PE_str+""+"\n")
   fproc_file.write("   wire mx_dqPE"+PE_str+";"+"\n")
   fproc_file.write("   assign mx_dqPE"+PE_str+" = (link_reg_dqPE"+PE_str+" == derv_reg_dqPE"+PE_str+") ? 1 : 0;"+"\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // dqd external inputs"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
for PEid in range(1,num_PEs+1):
   PE_str = str(PEid)
   suffix = "_dqdPE"+PE_str+""
   fproc_file.write("   // dqdPE"+PE_str+""+"\n")
   fproc_file.write("   wire mx_dqdPE"+PE_str+";"+"\n")
   fproc_file.write("   assign mx_dqdPE"+PE_str+" = (link_reg_dqdPE"+PE_str+" == derv_reg_dqdPE"+PE_str+") ? 1 : 0;"+"\n")
fproc_file.write("\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // dID/dq"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("\n")
#-------------------------------------------------------------------------------
for PEid in range(1,num_PEs+1):
   PE_str = str(PEid)
   suffix = "_dqPE"+PE_str+""
   fproc_file.write("   // dqPE"+PE_str+""+"\n")
   fproc_file.write("   dqfpijx#(.WIDTH(WIDTH),.DECIMAL_BITS(DECIMAL_BITS))"+"\n")
   fproc_file.write("      dqfpi"+PE_str+"("+"\n")
   fproc_file.write("      // clock"+"\n")
   fproc_file.write("      .clk(clk),"+"\n")
   fproc_file.write("      // reset"+"\n")
   fproc_file.write("      .reset(reset),"+"\n")
   fproc_file.write("      // state_reg"+"\n")
   fproc_file.write("      .state_reg(state_reg),"+"\n")
   fproc_file.write("      // stage booleans"+"\n")
   fproc_file.write("      .s1_bool_in(s1_bool_reg),.s2_bool_in(s2_bool_reg),.s3_bool_in(s3_bool_reg),"+"\n")
   fproc_file.write("      // link_in"+"\n")
   fproc_file.write("      .link_in(link_reg_dqPE"+PE_str+"),"+"\n")
   fproc_file.write("      // sin(q) and cos(q)"+"\n")
   fproc_file.write("      .sinq_val_in(sinq_val_reg_dqPE"+PE_str+"),.cosq_val_in(cosq_val_reg_dqPE"+PE_str+"),"+"\n")
   fproc_file.write("      // qd_val_in"+"\n")
   fproc_file.write("      .qd_val_in(qd_val_reg_dqPE"+PE_str+"),"+"\n")
   fproc_file.write("      // v_vec_in, 6 values"+"\n")
   fproc_file.write("      .v_curr_vec_in_AX(v_curr_vec_reg_AX_dqPE"+PE_str+"),.v_curr_vec_in_AY(v_curr_vec_reg_AY_dqPE"+PE_str+"),.v_curr_vec_in_AZ(v_curr_vec_reg_AZ_dqPE"+PE_str+"),.v_curr_vec_in_LX(v_curr_vec_reg_LX_dqPE"+PE_str+"),.v_curr_vec_in_LY(v_curr_vec_reg_LY_dqPE"+PE_str+"),.v_curr_vec_in_LZ(v_curr_vec_reg_LZ_dqPE"+PE_str+"),"+"\n")
   fproc_file.write("      // a_vec_in, 6 values"+"\n")
   fproc_file.write("      .a_curr_vec_in_AX(a_curr_vec_reg_AX_dqPE"+PE_str+"),.a_curr_vec_in_AY(a_curr_vec_reg_AY_dqPE"+PE_str+"),.a_curr_vec_in_AZ(a_curr_vec_reg_AZ_dqPE"+PE_str+"),.a_curr_vec_in_LX(a_curr_vec_reg_LX_dqPE"+PE_str+"),.a_curr_vec_in_LY(a_curr_vec_reg_LY_dqPE"+PE_str+"),.a_curr_vec_in_LZ(a_curr_vec_reg_LZ_dqPE"+PE_str+"),"+"\n")
   fproc_file.write("      // v_vec_in, 6 values"+"\n")
   fproc_file.write("      .v_prev_vec_in_AX(v_prev_vec_reg_AX_dqPE"+PE_str+"),.v_prev_vec_in_AY(v_prev_vec_reg_AY_dqPE"+PE_str+"),.v_prev_vec_in_AZ(v_prev_vec_reg_AZ_dqPE"+PE_str+"),.v_prev_vec_in_LX(v_prev_vec_reg_LX_dqPE"+PE_str+"),.v_prev_vec_in_LY(v_prev_vec_reg_LY_dqPE"+PE_str+"),.v_prev_vec_in_LZ(v_prev_vec_reg_LZ_dqPE"+PE_str+"),"+"\n")
   fproc_file.write("      // a_vec_in, 6 values"+"\n")
   fproc_file.write("      .a_prev_vec_in_AX(a_prev_vec_reg_AX_dqPE"+PE_str+"),.a_prev_vec_in_AY(a_prev_vec_reg_AY_dqPE"+PE_str+"),.a_prev_vec_in_AZ(a_prev_vec_reg_AZ_dqPE"+PE_str+"),.a_prev_vec_in_LX(a_prev_vec_reg_LX_dqPE"+PE_str+"),.a_prev_vec_in_LY(a_prev_vec_reg_LY_dqPE"+PE_str+"),.a_prev_vec_in_LZ(a_prev_vec_reg_LZ_dqPE"+PE_str+"),"+"\n")
   fproc_file.write("      // v_vec_in, 6 values"+"\n")
   fproc_file.write("      .dvdq_prev_vec_in_AX(dvdq_prev_vec_reg_AX_dqPE"+PE_str+"),.dvdq_prev_vec_in_AY(dvdq_prev_vec_reg_AY_dqPE"+PE_str+"),.dvdq_prev_vec_in_AZ(dvdq_prev_vec_reg_AZ_dqPE"+PE_str+"),.dvdq_prev_vec_in_LX(dvdq_prev_vec_reg_LX_dqPE"+PE_str+"),.dvdq_prev_vec_in_LY(dvdq_prev_vec_reg_LY_dqPE"+PE_str+"),.dvdq_prev_vec_in_LZ(dvdq_prev_vec_reg_LZ_dqPE"+PE_str+"),"+"\n")
   fproc_file.write("      // a_vec_in, 6 values"+"\n")
   fproc_file.write("      .dadq_prev_vec_in_AX(dadq_prev_vec_reg_AX_dqPE"+PE_str+"),.dadq_prev_vec_in_AY(dadq_prev_vec_reg_AY_dqPE"+PE_str+"),.dadq_prev_vec_in_AZ(dadq_prev_vec_reg_AZ_dqPE"+PE_str+"),.dadq_prev_vec_in_LX(dadq_prev_vec_reg_LX_dqPE"+PE_str+"),.dadq_prev_vec_in_LY(dadq_prev_vec_reg_LY_dqPE"+PE_str+"),.dadq_prev_vec_in_LZ(dadq_prev_vec_reg_LZ_dqPE"+PE_str+"),"+"\n")
   fproc_file.write("      // mcross boolean"+"\n")
   fproc_file.write("      .mcross(mx_dqPE"+PE_str+"),"+"\n")
   fproc_file.write("      // dvdq_vec_out, 6 values"+"\n")
   fproc_file.write("      .dvdq_curr_vec_out_AX(dvdq_curr_vec_out_AX_dqPE"+PE_str+"),.dvdq_curr_vec_out_AY(dvdq_curr_vec_out_AY_dqPE"+PE_str+"),.dvdq_curr_vec_out_AZ(dvdq_curr_vec_out_AZ_dqPE"+PE_str+"),.dvdq_curr_vec_out_LX(dvdq_curr_vec_out_LX_dqPE"+PE_str+"),.dvdq_curr_vec_out_LY(dvdq_curr_vec_out_LY_dqPE"+PE_str+"),.dvdq_curr_vec_out_LZ(dvdq_curr_vec_out_LZ_dqPE"+PE_str+"),"+"\n")
   fproc_file.write("      // dadq_vec_out, 6 values"+"\n")
   fproc_file.write("      .dadq_curr_vec_out_AX(dadq_curr_vec_out_AX_dqPE"+PE_str+"),.dadq_curr_vec_out_AY(dadq_curr_vec_out_AY_dqPE"+PE_str+"),.dadq_curr_vec_out_AZ(dadq_curr_vec_out_AZ_dqPE"+PE_str+"),.dadq_curr_vec_out_LX(dadq_curr_vec_out_LX_dqPE"+PE_str+"),.dadq_curr_vec_out_LY(dadq_curr_vec_out_LY_dqPE"+PE_str+"),.dadq_curr_vec_out_LZ(dadq_curr_vec_out_LZ_dqPE"+PE_str+"),"+"\n")
   fproc_file.write("      // dfdq_vec_out, 6 values"+"\n")
   fproc_file.write("      .dfdq_curr_vec_out_AX(dfdq_curr_vec_out_AX_dqPE"+PE_str+"),.dfdq_curr_vec_out_AY(dfdq_curr_vec_out_AY_dqPE"+PE_str+"),.dfdq_curr_vec_out_AZ(dfdq_curr_vec_out_AZ_dqPE"+PE_str+"),.dfdq_curr_vec_out_LX(dfdq_curr_vec_out_LX_dqPE"+PE_str+"),.dfdq_curr_vec_out_LY(dfdq_curr_vec_out_LY_dqPE"+PE_str+"),.dfdq_curr_vec_out_LZ(dfdq_curr_vec_out_LZ_dqPE"+PE_str+")"+"\n")
   fproc_file.write("      );"+"\n")
   fproc_file.write("\n")
#-------------------------------------------------------------------------------
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("   // dID/dqd"+"\n")
fproc_file.write("   //---------------------------------------------------------------------------"+"\n")
fproc_file.write("\n")
for PEid in range(1,num_PEs+1):
   PE_str = str(PEid)
   suffix = "_dqdPE"+PE_str+""
   fproc_file.write("   // dqdPE"+PE_str+""+"\n")
   fproc_file.write("   dqdfpijx#(.WIDTH(WIDTH),.DECIMAL_BITS(DECIMAL_BITS))"+"\n")
   fproc_file.write("      dqdfpi"+PE_str+"("+"\n")
   fproc_file.write("      // clock"+"\n")
   fproc_file.write("      .clk(clk),"+"\n")
   fproc_file.write("      // reset"+"\n")
   fproc_file.write("      .reset(reset),"+"\n")
   fproc_file.write("      // state_reg"+"\n")
   fproc_file.write("      .state_reg(state_reg),"+"\n")
   fproc_file.write("      // stage booleans"+"\n")
   fproc_file.write("      .s1_bool_in(s1_bool_reg),.s2_bool_in(s2_bool_reg),.s3_bool_in(s3_bool_reg),"+"\n")
   fproc_file.write("      // link_in"+"\n")
   fproc_file.write("      .link_in(link_reg_dqdPE"+PE_str+"),"+"\n")
   fproc_file.write("      // sin(q) and cos(q)"+"\n")
   fproc_file.write("      .sinq_val_in(sinq_val_reg_dqdPE"+PE_str+"),.cosq_val_in(cosq_val_reg_dqdPE"+PE_str+"),"+"\n")
   fproc_file.write("      // qd_val_in"+"\n")
   fproc_file.write("      .qd_val_in(qd_val_reg_dqdPE"+PE_str+"),"+"\n")
   fproc_file.write("      // v_vec_in, 6 values"+"\n")
   fproc_file.write("      .v_curr_vec_in_AX(v_curr_vec_reg_AX_dqdPE"+PE_str+"),.v_curr_vec_in_AY(v_curr_vec_reg_AY_dqdPE"+PE_str+"),.v_curr_vec_in_AZ(v_curr_vec_reg_AZ_dqdPE"+PE_str+"),.v_curr_vec_in_LX(v_curr_vec_reg_LX_dqdPE"+PE_str+"),.v_curr_vec_in_LY(v_curr_vec_reg_LY_dqdPE"+PE_str+"),.v_curr_vec_in_LZ(v_curr_vec_reg_LZ_dqdPE"+PE_str+"),"+"\n")
   fproc_file.write("      // a_vec_in, 6 values"+"\n")
   fproc_file.write("      .a_curr_vec_in_AX(a_curr_vec_reg_AX_dqdPE"+PE_str+"),.a_curr_vec_in_AY(a_curr_vec_reg_AY_dqdPE"+PE_str+"),.a_curr_vec_in_AZ(a_curr_vec_reg_AZ_dqdPE"+PE_str+"),.a_curr_vec_in_LX(a_curr_vec_reg_LX_dqdPE"+PE_str+"),.a_curr_vec_in_LY(a_curr_vec_reg_LY_dqdPE"+PE_str+"),.a_curr_vec_in_LZ(a_curr_vec_reg_LZ_dqdPE"+PE_str+"),"+"\n")
   fproc_file.write("      // v_vec_in, 6 values"+"\n")
   fproc_file.write("      .dvdqd_prev_vec_in_AX(dvdqd_prev_vec_reg_AX_dqdPE"+PE_str+"),.dvdqd_prev_vec_in_AY(dvdqd_prev_vec_reg_AY_dqdPE"+PE_str+"),.dvdqd_prev_vec_in_AZ(dvdqd_prev_vec_reg_AZ_dqdPE"+PE_str+"),.dvdqd_prev_vec_in_LX(dvdqd_prev_vec_reg_LX_dqdPE"+PE_str+"),.dvdqd_prev_vec_in_LY(dvdqd_prev_vec_reg_LY_dqdPE"+PE_str+"),.dvdqd_prev_vec_in_LZ(dvdqd_prev_vec_reg_LZ_dqdPE"+PE_str+"),"+"\n")
   fproc_file.write("      // a_vec_in, 6 values"+"\n")
   fproc_file.write("      .dadqd_prev_vec_in_AX(dadqd_prev_vec_reg_AX_dqdPE"+PE_str+"),.dadqd_prev_vec_in_AY(dadqd_prev_vec_reg_AY_dqdPE"+PE_str+"),.dadqd_prev_vec_in_AZ(dadqd_prev_vec_reg_AZ_dqdPE"+PE_str+"),.dadqd_prev_vec_in_LX(dadqd_prev_vec_reg_LX_dqdPE"+PE_str+"),.dadqd_prev_vec_in_LY(dadqd_prev_vec_reg_LY_dqdPE"+PE_str+"),.dadqd_prev_vec_in_LZ(dadqd_prev_vec_reg_LZ_dqdPE"+PE_str+"),"+"\n")
   fproc_file.write("      // mcross boolean"+"\n")
   fproc_file.write("      .mcross(mx_dqdPE"+PE_str+"),"+"\n")
   fproc_file.write("      // dvdqd_vec_out, 6 values"+"\n")
   fproc_file.write("      .dvdqd_curr_vec_out_AX(dvdqd_curr_vec_out_AX_dqdPE"+PE_str+"),.dvdqd_curr_vec_out_AY(dvdqd_curr_vec_out_AY_dqdPE"+PE_str+"),.dvdqd_curr_vec_out_AZ(dvdqd_curr_vec_out_AZ_dqdPE"+PE_str+"),.dvdqd_curr_vec_out_LX(dvdqd_curr_vec_out_LX_dqdPE"+PE_str+"),.dvdqd_curr_vec_out_LY(dvdqd_curr_vec_out_LY_dqdPE"+PE_str+"),.dvdqd_curr_vec_out_LZ(dvdqd_curr_vec_out_LZ_dqdPE"+PE_str+"),"+"\n")
   fproc_file.write("      // dadqd_vec_out, 6 values"+"\n")
   fproc_file.write("      .dadqd_curr_vec_out_AX(dadqd_curr_vec_out_AX_dqdPE"+PE_str+"),.dadqd_curr_vec_out_AY(dadqd_curr_vec_out_AY_dqdPE"+PE_str+"),.dadqd_curr_vec_out_AZ(dadqd_curr_vec_out_AZ_dqdPE"+PE_str+"),.dadqd_curr_vec_out_LX(dadqd_curr_vec_out_LX_dqdPE"+PE_str+"),.dadqd_curr_vec_out_LY(dadqd_curr_vec_out_LY_dqdPE"+PE_str+"),.dadqd_curr_vec_out_LZ(dadqd_curr_vec_out_LZ_dqdPE"+PE_str+"),"+"\n")
   fproc_file.write("      // dfdqd_vec_out, 6 values"+"\n")
   fproc_file.write("      .dfdqd_curr_vec_out_AX(dfdqd_curr_vec_out_AX_dqdPE"+PE_str+"),.dfdqd_curr_vec_out_AY(dfdqd_curr_vec_out_AY_dqdPE"+PE_str+"),.dfdqd_curr_vec_out_AZ(dfdqd_curr_vec_out_AZ_dqdPE"+PE_str+"),.dfdqd_curr_vec_out_LX(dfdqd_curr_vec_out_LX_dqdPE"+PE_str+"),.dfdqd_curr_vec_out_LY(dfdqd_curr_vec_out_LY_dqdPE"+PE_str+"),.dfdqd_curr_vec_out_LZ(dfdqd_curr_vec_out_LZ_dqdPE"+PE_str+")"+"\n")
   fproc_file.write("      );"+"\n")
   fproc_file.write("\n")
#-------------------------------------------------------------------------------
fproc_file.write("endmodule"+"\n")
#-------------------------------------------------------------------------------

# Close file
fproc_file.close()
